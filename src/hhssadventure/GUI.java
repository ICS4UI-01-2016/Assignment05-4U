/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hhssadventure;

import java.awt.image.BufferedImage;

/**
 *
 * @author richj0985
 */
public class GUI extends javax.swing.JFrame {

    private Controller controller;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    public void setController(Controller c) {
        controller = c;
    }

    public void setImage(BufferedImage img) {
        // the image panel sets its image
        imagePanel.setImage(img);
    }
    
    public void setDirection(String direction){
        if(direction.equals("N")){
            labelDirection.setText("NORTH");
        } else if(direction.equals("S")){
            labelDirection.setText("SOUTH");
        } else if(direction.equals("E")){
            labelDirection.setText("EAST");
        } else if (direction.equals("W")){
            labelDirection.setText("WEST");
        }
    }
    
    public void setBlocked(boolean blocked){
        if(blocked){
            labelBlocked.setText("BLOCKED!");
        } else{
            labelBlocked.setText("GO!");
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonForward = new javax.swing.JButton();
        buttonLeft = new javax.swing.JButton();
        buttonRight = new javax.swing.JButton();
        buttonBackwards = new javax.swing.JButton();
        imagePanel = new hhssadventure.ImageComponent();
        labelBlocked = new javax.swing.JTextField();
        labelDirection = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonForward.setBackground(new java.awt.Color(0, 0, 0));
        buttonForward.setForeground(new java.awt.Color(255, 255, 255));
        buttonForward.setText("FORWARD");
        buttonForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonForwardActionPerformed(evt);
            }
        });

        buttonLeft.setBackground(new java.awt.Color(0, 0, 0));
        buttonLeft.setForeground(new java.awt.Color(255, 255, 255));
        buttonLeft.setText("LEFT");
        buttonLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLeftActionPerformed(evt);
            }
        });

        buttonRight.setBackground(new java.awt.Color(0, 0, 0));
        buttonRight.setForeground(new java.awt.Color(255, 255, 255));
        buttonRight.setText("RIGHT");
        buttonRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRightActionPerformed(evt);
            }
        });

        buttonBackwards.setBackground(new java.awt.Color(0, 0, 0));
        buttonBackwards.setForeground(new java.awt.Color(255, 255, 255));
        buttonBackwards.setText("BACKWARDS");
        buttonBackwards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackwardsActionPerformed(evt);
            }
        });

        imagePanel.setToolTipText("");

        labelBlocked.setEditable(false);
        labelBlocked.setBackground(new java.awt.Color(204, 0, 204));
        labelBlocked.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        labelBlocked.setForeground(new java.awt.Color(255, 255, 255));
        labelBlocked.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        labelBlocked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelBlockedActionPerformed(evt);
            }
        });

        labelDirection.setEditable(false);
        labelDirection.setBackground(new java.awt.Color(204, 0, 204));
        labelDirection.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        labelDirection.setForeground(new java.awt.Color(255, 255, 255));
        labelDirection.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        labelDirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelDirectionActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(204, 0, 204));
        jTextField1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("HHSS ADVENTURE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(labelDirection, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(buttonRight, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(buttonForward, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelBlocked, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonBackwards, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonRight)
                            .addComponent(buttonLeft)
                            .addComponent(labelDirection, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelBlocked, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(buttonForward, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonBackwards, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonForwardActionPerformed
        // Go North!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        if (controller.direction.equals("N")) {
//            controller.goNorth();
//        } else {
//            controller.turnNorth();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("N"));
//            
//        }
//        System.out.println("");
//        controller.turnNorth();
//        labelDirection.setText("NORTH");
        // Go forwards!
        controller.goForward();
    }//GEN-LAST:event_buttonForwardActionPerformed

    private void buttonRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRightActionPerformed
        // Go East!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        if (controller.direction.equals("E")) {
//            controller.goEast();
//        } else {
//            controller.turnEast();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("E"));
//            
//        }
//        System.out.println("");
        
        if(controller.direction.equals("N")){
            controller.turnEast();
        } else if(controller.direction.equals("S")){
            controller.turnWest();
        } else if(controller.direction.equals("E")){
            controller.turnSouth();
        } else if(controller.direction.equals("W")){
            controller.turnNorth();
        }
        
//        controller.turnEast();
//        labelDirection.setText("EAST");
    }//GEN-LAST:event_buttonRightActionPerformed

    private void buttonBackwardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackwardsActionPerformed
        // Go South!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        if (controller.direction.equals("S")) {
//            controller.goSouth();
//        } else {
//            controller.turnSouth();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("S"));
//            
//        }
//        System.out.println("");
        if(controller.direction.equals("N")){
            controller.turnSouth();
        } else if(controller.direction.equals("S")){
            controller.turnNorth();
        } else if(controller.direction.equals("E")){
            controller.turnWest();
        } else if(controller.direction.equals("W")){
            controller.turnEast();
        }
//        controller.turnSouth();
//        labelDirection.setText("SOUTH");
    }//GEN-LAST:event_buttonBackwardsActionPerformed

    private void buttonLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLeftActionPerformed
//        // Go West!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        
//        if (controller.direction.equals("W")) {
//            controller.goWest();
//        } else {
//            // Controller will turn west
//            controller.turnWest();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("W"));
//            
//        }
//        System.out.println("");
        
        if(controller.direction.equals("N")){
            controller.turnWest();
        } else if(controller.direction.equals("S")){
            controller.turnEast();
        } else if(controller.direction.equals("E")){
            controller.turnNorth();
        } else if(controller.direction.equals("W")){
            controller.turnSouth();
        }
//        controller.turnWest();
//        labelDirection.setText("WEST");
    }//GEN-LAST:event_buttonLeftActionPerformed

    private void labelDirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelDirectionActionPerformed
        
    }//GEN-LAST:event_labelDirectionActionPerformed

    private void labelBlockedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelBlockedActionPerformed
        
    }//GEN-LAST:event_labelBlockedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBackwards;
    private javax.swing.JButton buttonForward;
    private javax.swing.JButton buttonLeft;
    private javax.swing.JButton buttonRight;
    private hhssadventure.ImageComponent imagePanel;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField labelBlocked;
    private javax.swing.JTextField labelDirection;
    // End of variables declaration//GEN-END:variables
}
