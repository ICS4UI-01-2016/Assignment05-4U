/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hhssadventure;

import java.awt.image.BufferedImage;

/**
 *
 * @author richj0985
 */
public class GUI extends javax.swing.JFrame {

    private Controller controller;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    public void setController(Controller c) {
        controller = c;
    }

    public void setImage(BufferedImage img) {
        // the image panel sets its image
        imagePanel.setImage(img);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonNorth = new javax.swing.JButton();
        buttonWest = new javax.swing.JButton();
        buttonEast = new javax.swing.JButton();
        buttonSouth = new javax.swing.JButton();
        imagePanel = new hhssadventure.ImageComponent();
        buttonForward = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonNorth.setText("NORTH");
        buttonNorth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNorthActionPerformed(evt);
            }
        });

        buttonWest.setText("WEST");
        buttonWest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonWestActionPerformed(evt);
            }
        });

        buttonEast.setText("EAST");
        buttonEast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEastActionPerformed(evt);
            }
        });

        buttonSouth.setText("SOUTH");
        buttonSouth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSouthActionPerformed(evt);
            }
        });

        buttonForward.setText("FORWARD");
        buttonForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonForwardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonWest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonForward, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonEast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(buttonSouth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(78, 78, 78))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(buttonNorth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(77, 77, 77)))))
                .addGap(184, 184, 184))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonNorth, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonForward)
                    .addComponent(buttonEast)
                    .addComponent(buttonWest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonSouth, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonNorthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNorthActionPerformed
        // Go North!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        if (controller.direction.equals("N")) {
//            controller.goNorth();
//        } else {
//            controller.turnNorth();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("N"));
//            
//        }
//        System.out.println("");
        controller.turnNorth();
    }//GEN-LAST:event_buttonNorthActionPerformed

    private void buttonEastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEastActionPerformed
        // Go East!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        if (controller.direction.equals("E")) {
//            controller.goEast();
//        } else {
//            controller.turnEast();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("E"));
//            
//        }
//        System.out.println("");
        controller.turnEast();
    }//GEN-LAST:event_buttonEastActionPerformed

    private void buttonSouthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSouthActionPerformed
        // Go South!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        if (controller.direction.equals("S")) {
//            controller.goSouth();
//        } else {
//            controller.turnSouth();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("S"));
//            
//        }
//        System.out.println("");
        controller.turnSouth();
    }//GEN-LAST:event_buttonSouthActionPerformed

    private void buttonWestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonWestActionPerformed
//        // Go West!
//        System.out.println("Direction: " + controller.direction);
//        System.out.println("Location: " + controller.location);
//        
//        if (controller.direction.equals("W")) {
//            controller.goWest();
//        } else {
//            // Controller will turn west
//            controller.turnWest();
//            System.out.println("Direction After Turn: " + controller.direction);
//            System.out.println("Location After Turn: " + controller.location);
//            System.out.println(controller.direction.equals("W"));
//            
//        }
//        System.out.println("");

        controller.turnWest();
    }//GEN-LAST:event_buttonWestActionPerformed

    private void buttonForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonForwardActionPerformed
        // Go forwards!
        controller.goForward();

    }//GEN-LAST:event_buttonForwardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEast;
    private javax.swing.JButton buttonForward;
    private javax.swing.JButton buttonNorth;
    private javax.swing.JButton buttonSouth;
    private javax.swing.JButton buttonWest;
    private hhssadventure.ImageComponent imagePanel;
    // End of variables declaration//GEN-END:variables
}
